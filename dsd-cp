#!/usr/bin/perl
# Copyright 2014 CentralNic Ltd. This program is free software; you can
# redistribute it and/or modify it under the same terms as Perl itself.
use Config::Simple;
use Getopt::Long;
use POSIX;
use Pod::Usage;
use IPC::Open3;
use Sys::Syslog qw(:standard :macros);
use strict;

openlog('dsd-cp', 'ndelay,perror,pid', LOG_DAEMON);

my $file = '/etc/dsd.conf';
my $help;
my $stdin;
GetOptions(
	'config=s' => \$file,
	'help'     => \$help,
);

pod2usage('-verbose' => 99, '-sections' => 'USAGE|OPTIONS') if ($help);

my $config = Config::Simple->new($file)->hashref;

syslog(LOG_DEBUG, "Running with config from $file");

my @files;
if (!opendir(DIR, $config->{'dsd.directory'})) {
	syslog(LOG_CRIT, "Error reading $config->{'dsd.directory'}: $!");
	exit(1);

} else {
	syslog(LOG_DEBUG, "Reading list of files in $config->{'dsd.directory'}");
	@files = map { $config->{'dsd.directory'} .'/' . $_ } grep { /\.js$/i } readdir(DIR);
	closedir(DIR);

}

syslog(LOG_DEBUG, sprintf("%d files", scalar(@files)));

$SIG{'PIPE'} = sub {
	syslog(LOG_CRIT, "received SIGPIPE from child");
	exit(1);
};

my $cmd = join(' ', (
	'sftp',
	'-b' , '-',
	'-o', sprintf('IdentityFile=%s', $config->{'cp.key'}),
	sprintf('%s@%s', $config->{'cp.user'}, $config->{'cp.host'})
));

syslog(LOG_DEBUG, $cmd);

my $pid;
eval { $pid = open3(
	\*CHLD_IN, \*CHLD_OUT, \*CHLD_ERR,
	$cmd,
) };
if ($@ || $pid < 1) {
	chomp($@);
	syslog(LOG_CRIT, "Error executing sftp: $@");
	exit(1);
}

syslog(LOG_DEBUG, "Copying files");

printf(CHLD_IN "cd %s\n", $config->{'cp.directory'});
foreach my $file (@files) {
	printf(CHLD_IN "put %s\n", $file);
}
close(CHLD_IN);

while (my $out = <CHLD_OUT>) {
	chomp($out);
	syslog(LOG_DEBUG, $out);
}
close(CHLD_OUT);

while (my $out = <CHLD_ERR>) {
	chomp($out);
	syslog(LOG_CRIT, $out);
}
close(CHLD_ERR);

waitpid($pid, 0);

my $status = $? >> 8;
if ($status > 0) {
	syslog(LOG_CRIT, "sftp terminated with status $status");
	exit(1);
}

syslog(LOG_DEBUG, "deleting files");
map { unlink($_) } @files;

syslog(LOG_DEBUG, "done");

__END__

=pod

=head1 NAME

DSD - A Simple DNS Statistics Collecting Daemon

=head1 DESCRIPTION

=head1 USAGE

	dsd [OPTIONS]

=head1 OPTIONS

=over

=item --config=FILE

Specify config file. Defaults to /etc/dsd/dsd.conf

=item --help

Show help.

=back

=head1 CONFIGURATION OPTIONS

	[dsd]

	; location to where files are written:
	directory="/var/lib/dsd"

	[cp]

	; SSH key to use:
	key=/path/to/id_rsa

	; username on remote host
	user=dsd

	; server to copy to
	host=hostname

	; directory on remote host
	directory=/home/dsd/data

=head1 SEE ALSO

=over

=item C<dsd>, the daemon which runs on a DNS server and generates statistical data.

=item C<dsd-db>, which processes DSD data files and writes the data to a database.

=item C<dsd-munin>, a Munin plugin for displaying graphs based on the DSD database.

=item L<https://www.centralnic.com/>

=item L<http://www.net-dns.org/>

=item L<http://dns.measurement-factory.com/tools/dsc/>

=item L<http://munin-monitoring.org/>

=back

=head1 COPYRIGHT

dsd is Copyright 2014 CentralNic Ltd. All rights reserved. This program is free
software; you can redistribute it and/or modify it under the same terms as Perl
itself.

=cut