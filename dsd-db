#!/usr/bin/perl
# Copyright 2014 CentralNic Ltd. This program is free software; you can
# redistribute it and/or modify it under the same terms as Perl itself.
use Config::Simple;
use DBI;
use Getopt::Long;
use JSON;
use Net::DNS;
use Pod::Usage;
use Sys::Syslog qw(:standard :macros);
use strict;

openlog('dsd-db', 'ndelay,perror,pid', LOG_DAEMON);

my $file = '/etc/dsd.conf';
my $help;
my $stdin;
GetOptions(
	'config=s' => \$file,
	'help'     => \$help,
	'stdin'    => \$stdin,
);

pod2usage('-verbose' => 99, '-sections' => 'USAGE|OPTIONS') if ($help);

my $config = Config::Simple->new($file)->hashref;

syslog(LOG_DEBUG, "Running with config from $file");

my $db = DBI->connect(
	$config->{'db.dsn'},
	$config->{'db.user'},
	$config->{'db.pass'},
);

my $fssth = $db->prepare("SELECT COUNT(1) FROM files WHERE (filename=?)");

my $fisth = $db->prepare("INSERT INTO files (filename, processed) VALUES (?, 'NOW')");

my $disth = $db->prepare("INSERT INTO data
						(host, start, end, zone, family, proto, rcode, queries)
						VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
						
my @families = qw(4 6);
my @protos = qw(udp tcp);
my @rcodes = keys(%Net::DNS::rcodesbyname);

undef $/;
if ($stdin) {
	syslog(LOG_DEBUG, "Reading from STDIN");
	my $json = <STDIN>;
	parse_json($json);

} else {
	my @files = glob("$config->{'db.dir'}/*js");
	foreach my $file (@files) {
		$fssth->execute($file);
		my $rows = ($fssth->fetchrow_array)[0];
		if ($rows > 0) {
			syslog(LOG_DEBUG, "Skipping $file");
			next;

		} else {
			syslog(LOG_DEBUG, $file);

		}
		$fisth->execute($file) unless (1 == $config->{'db.delete'});

		open(FILE, $file);
		my $json = <FILE>;
		close(FILE);
		parse_json($json);

		unlink($file) if (1 == $config->{'db.delete'});
	}
}

syslog(LOG_DEBUG, "done");

sub parse_json {
	my $json = shift;

	my $data = from_json($json);

	foreach my $zone (keys(%{$data->{'zones'}})) {
		$disth->execute($data->{'host'}, $data->{'start'}, $data->{'end'}, $zone, undef, undef, undef, $data->{'zones'}->{$zone}->{'queries'});

		foreach my $family (@families) {
			$disth->execute($data->{'host'}, $data->{'start'}, $data->{'end'}, $zone, $family, undef, undef, $data->{'zones'}->{$zone}->{'families'}->{$family});
		}

		foreach my $proto (@protos) {
			$disth->execute($data->{'host'}, $data->{'start'}, $data->{'end'}, $zone, undef, $proto, undef, $data->{'zones'}->{$zone}->{'protos'}->{$proto});
		}

		foreach my $rcode (keys(%{$data->{'zones'}->{$zone}->{'rcodes'}})) {
			$disth->execute($data->{'host'}, $data->{'start'}, $data->{'end'}, $zone, undef, undef, $rcode, $data->{'zones'}->{$zone}->{'rcodes'}->{$rcode});
		}
	}
}
__END__

__END__

=HEAD1 NAME

DSD - A Simple DNS Statistics Collecting Daemon

=HEAD1 DESCRIPTION

dsd-db is a script which extracts data from the JSON files generated by the C<dsd>
script and imports them into a database.

=head1 USAGE

	dsd [OPTIONS]

=head1 OPTIONS

=over

=item --config=FILE

Specify config file. Defaults to /etc/dsd/dsd.conf

=item --stdin

Read a single JSON structure from STDIN rather than scanning the disk for files.

=item --help

Show help.

=back

=head1 CONFIGURATION OPTIONS

	[dsd]
	(miscellaneous dsd options)

	[db]

	; DBI DSN
	dsn="DBI:SQLite:dbname=/var/lib/dsd/dsd.sqlite"

	; username and password (empty if using SQLite)
	user=""
	pass=""

	; directory where .js files are located
	dir=/var/lib/dsd

	; 0 to leave files on disk, 1 to delete them once processed
	delete=1

=head1 COPYRIGHT

dsd is Copyright 2014 CentralNic Ltd. All rights reserved. This program is free
software; you can redistribute it and/or modify it under the same terms as Perl
itself.

=cut